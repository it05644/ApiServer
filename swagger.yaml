openapi: 3.0.0
info:
  title: Sample API
  version: 1.0.1
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
paths:
  /hello:
    get:
      summary: Returns a greeting message!
      tags:
        - Greeting
      responses:
        '200': 
          description: A successful response 200
        '201': 
          description: A successful response 201
        '400': 
          description: Bad request
        '500': 
          description: Internal server error
  /shutdown:
    get:
      summary: Shuts down the server
      tags:
        - Shutdown
      description: This endpoint is used to shut down the server gracefully.
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Server is shutting down
        '403':
          description: Forbidden - invalid token
        '500':
          description: Internal server error
  /users:
    get:
      summary: Returns all users
      tags:
        - Users
      responses:
        '200':
          description: A successful response with a list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
    post:
      summary: Creates a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/User'
        '400':
          description: Bad request - invalid input
        '500':
          description: Internal server error

            // Get a user by ID
  /users/{id}:
    get:
      summary: Returns a user by ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A successful response with user details
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Internal server error
    delete:
      summary: Deletes a user by ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/User'
        '400':
          description: Bad request - invalid input
        '404':
          description: User not found
        '500':
          description: Internal server error